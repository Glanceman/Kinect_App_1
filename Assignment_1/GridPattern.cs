using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Assignment_1
{

    class GridPattern
    {
        private List<int[,]> patterns = new List<int[,]>();


        public GridPattern()
        {
            patterns.Add(new int[,] {
               { 0,0,0,0,0,0,0,0 },
               { 0,0,0,1,1,0,0,0 },
               { 0,0,0,1,1,0,0,0 },
               { 0,0,0,1,1,0,0,0 },
               { 0,0,0,1,1,0,0,0 },
               { 0,0,0,1,1,0,0,0 },
               { 0,0,0,1,1,0,0,0 },
               { 0,0,0,0,0,0,0,0 }
            });
            patterns.Add(new int[,] {
               { 0,0,0,0,0,0,0,0 },
               { 0,0,0,0,0,0,0,0 },
               { 0,0,1,0,0,1,0,0 },
               { 0,0,0,1,1,0,0,0 },
               { 0,0,0,1,1,0,0,0 },
               { 0,0,1,0,0,1,0,0 },
               { 0,0,0,0,0,0,0,0 },
               { 0,0,0,0,0,0,0,0 }
            });
            patterns.Add(new int[,] {
               { 0,0,0,0,0,0,0,0 },
               { 0,0,0,0,0,0,0,0 },
               { 0,0,0,0,0,0,0,0 },
               { 0,0,0,1,1,0,0,0 },
               { 0,0,0,1,1,0,0,0 },
               { 0,0,0,0,0,0,0,0 },
               { 0,0,0,0,0,0,0,0 },
               { 0,0,0,0,0,0,0,0 }
            });
            patterns.Add(new int[,]
            {
               { 0,0,0,0,0,0,0,0 },
               { 0,0,0,1,1,0,0,0 },
               { 0,1,1,1,1,1,1,0 },
               { 0,0,0,1,1,0,0,0 },
               { 0,0,0,1,1,0,0,0 },
               { 0,0,0,1,1,0,0,0 },
               { 0,0,0,0,0,0,0,0 },
               { 0,0,0,0,0,0,0,0 }
            });

            patterns.Add(new int[,]
            {
               { 0,0,0,0,0,0,0,0 },
               { 0,0,0,1,1,0,0,0 },
               { 0,0,0,1,1,0,0,0 },
               { 0,1,1,1,1,1,1,0 },
               { 0,0,0,1,1,0,0,0 },
               { 0,0,0,1,1,0,0,0 },
               { 0,0,0,1,1,0,0,0 },
               { 0,0,0,0,0,0,0,0 }
            });

            patterns.Add(new int[,]
           {
               { 0,0,0,0,0,0,0,0 },
               { 0,0,0,0,0,0,0,0 },
               { 0,0,0,0,0,0,0,0 },
               { 0,0,0,0,0,0,0,0 },
               { 0,1,1,1,1,1,1,0 },
               { 0,0,0,0,0,0,0,0 },
               { 0,0,0,0,0,0,0,0 },
               { 0,0,0,0,0,0,0,0 }
           });

            patterns.Add(new int[,]
            {
               { 0,0,0,0,0,0,0,0 },
               { 0,0,1,0,0,0,0,0 },
               { 0,0,1,0,0,0,0,0 },
               { 0,0,1,0,0,0,0,0 },
               { 0,0,1,0,0,0,0,0 },
               { 0,0,1,1,1,1,1,0 },
               { 0,0,0,0,0,0,0,0 },
               { 0,0,0,0,0,0,0,0 }
            });

        }

        public int[,] getPattern(int index)
        {
            if (index < patterns.Count)
            {
                return patterns[index];
            }
            return null;
        }

        public int getNumberofPatterns()
        {
            return patterns.Count;
        }
    }
}
